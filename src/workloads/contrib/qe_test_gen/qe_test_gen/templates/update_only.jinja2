{% macro ingest(phase) %}
{% with ctx = phase.context() %}
{% include phase.generate() %}
{% endwith %}
{% endmacro %}
{% macro X(snippet) %}
<<snippet>>
{% endmacro %}
SchemaVersion: 2018-07-01
Owner: "@10gen/server-security"
Description: |
  {%+ include description %}

{% if encryptedFields %}
Encryption:
  UseCryptSharedLib: true
  CryptSharedLibPath: /data/workdir/mongocrypt/lib/mongo_crypt_v1.so
  EncryptedCollections:
  - Database: genny_qebench2
    Collection: <<collectionName>>
    EncryptionType: queryable

    QueryableEncryptedFields:
      field0: &field_schema { type: "string", queries: [{queryType: "equality", contention: <<contentionFactor>> }] }
    {% for num in range(1, encryptedFields) %}
      field<<num>>: *field_schema
    {% endfor %}
    {% endif %}

Clients:
  EncryptedPool:
    QueryOptions:
      maxPoolSize: 400
{% if encryptedFields %}
    EncryptionOptions:
      KeyVaultDatabase: "keyvault"
      KeyVaultCollection: "datakeys"
      EncryptedCollections:
      - genny_qebench2.<<collectionName>>
{% endif %}


Actors:
  - Name: QEDataLoader
    Type: MonotonicSingleLoader
    Threads: <<threadCount>>
    ClientName: EncryptedPool
    Phases:
    - Repeat: 1
      MetricsName: "load"
      MultipleThreadsPerCollection: true
      DocumentCount: <<documentCount>>
      Collection: <<collectionName>>
      BatchSize: 1000
      Database: genny_qebench2
      Document:
        LoadConfig:
          Path: contrib//qe_test_gen/maps_<<collectionName>>.yml
          Key: document_insert_<<collectionName>>
          Parameters:
            Database: ignored
            multiplier: <<iterationsPerThread>>
    {% for phase in phases %}
    - Nop: True
    {% endfor %}

  {% if phases %} 
  - Name: InsertActor
    Type: CrudActor
    Threads: <<threadCount>>
    Database: genny_qebench2
    ClientName: EncryptedPool
    Phases:
    
    {% for phase in phases %}
    << ingest(phase) | indent >>
    {% endfor %}
  {% endif %}
  
  - Name: LoggingActor0
    Type: LoggingActor
    Threads: 1
    Phases:
      - Phase: 0..<<maxPhase>>
        LogEvery: 5 minutes
        Blocking: None

{% if shouldAutoRun %}
AutoRun:
- When:
    mongodb_setup:
      $eq:
      - single-replica-fle
    branch_name:
      $neq:
      - v4.0
      - v4.2
      - v4.4
      - v5.0
      - v6.0
      - v6.1
      - v6.2
{% endif %}